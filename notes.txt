cls; LC_NUMERIC="en_SG.UTF-8" /share/projects/fsDigger/build/fsDigger

copy_simple(
	write_output(
		iwrite (STDOUT_FILENO,
			write (fd,
output_char(
	write_output(
		iwrite (STDOUT_FILENO,
			write (fd,
dd_copy(
	iwrite (STDOUT_FILENO,
		write (fd,


cd /share/projects/fsDigger
cp -v --update --recursive ../cpp/includes .
cp -v --update --recursive ../fatDigger/* coreutils/
cp -v coreutils/src/dd.c coreutils/src/_dd.c
ln --relative -s /share/projects/fsDigger/src/fsDigger.h /share/projects/fsDigger/coreutils/src/

//-std=c++17
// -Wl,--library-path=./coreutils/build/,--library=_dd

// Need to always use the original copy on new run
// -e 's/if\s*\(ibuf\)/if (ibuf&&keepBlkSize)/;' \
perl -p \
	-e 's/ (write\s?\()/ fsDigger_$1/;' \
	-e 's/(finish_up).?\(\);/fsDigger_$1();/;' \
	-e 's/^(int )?main\s?\(/$1dd_main (/;' \
	-e 's/static (.*(ibuf|input_file|obuf|output_file|r_full|w_full|w_bytes|w_partial|seek_bytes|seek_records))/$1/;' \
	-e 's/(\W)STDOUT_FILENO/$1DD_STDOUT_FILENO/;' \
	coreutils/src/dd.c \
| perl -p -0 \
	-e 's@#include.*"system.h"@$&\n#include "../../src/fsDigger.h"@;' \
	-e 's/(static.void.(cleanup))(.*?{\R)(.*?)\R{2}(.*?)}/$1_in$3$4\n}\n\n$1_out$3$5\n}\n\n$1$3 $2_in();\n $2_out();\n}/s;' \
	-e 's/static.(void.(finish_up|cleanup_in|cleanup_out|print_stats|process_signals))/$1/sg;'\
	> coreutils/src/_dd.c



cd /share/projects/fsDigger/coreutils/
	cls; fileName=_dd; \
	gcc -Wall \
		-c \
		-I ./coreutils/lib \
		-o ./coreutils/build/$fileName.o \
		./coreutils/src/$fileName.c \
	&& ar rcs \
		coreutils/build/lib_dd.a \
		coreutils/build/_dd.o

	cls;fileName=_dd; \
	gcc -Wall \
	-fPIC -shared \
	-Wl,--warn-common \
	-I ./lib \
	-z global \
	-o ./build/$fileName.so \
	./src/$fileName.c

cd /share/projects/fsDigger/
	cls;fileName=main; \
	g++ -Wall \
	-std=gnu++17 \
	-o ./build/$fileName.o \
	-c ./$fileName.cpp \
	&& \
	g++ -Wall \
	-std=gnu++17 \
	-Wl,--allow-multiple-definition \
	-Wl,--library-path=./lib/,--library=pthread \
	-o ./build/fsDigger \
	./build/$fileName.o \
	./coreutils/build/lib_dd.a \
	./coreutils/lib/libcoreutils.a	\
	./coreutils/src/libver.a

	cls;fileName=main; \
	g++ -Wall \
	-std=gnu++17 \
	-o ./build/fsDigger \
	./build/$fileName.o \
	-Wl,--library-path=./coreutils/build/,--library=_dd \
	-Wl,--library-path=./coreutils/lib/,--library=coreutils \
	./coreutils/src/libver.a										// Same as above, use the former instead.

	cls;fileName=main; \
	g++ -Wall \
	-std=gnu++17 \
	-Wl,--start-group ./coreutils/build/lib_dd.a \
	-Wl,--end-group \
	-o ./build/fsDigger \
	./build/$fileName.o \
	-Wl,--library-path=./coreutils/lib/,--library=coreutils \
	./coreutils/src/libver.a										// This does not seem to work

g++ --no-warnings -I./lib -c -o src/dd.o src/dd.c
g++ --no-warnings -fpermissive -I./lib -c -o src/dd.o src/dd.c
g++ --no-warnings -fpermissive -DGNULIB_defined_struct__gl_verify_type -I./lib -c -o src/dd.o src/dd.c
